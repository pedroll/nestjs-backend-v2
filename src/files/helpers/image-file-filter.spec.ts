// Generated by Qodo Gen

import { imageFileFilter } from './imageFilter.helper';
import { BadRequestException } from '@nestjs/common';

describe('imageFileFilter', () => {
  // Valid JPEG image file is accepted
  it('should accept a valid JPEG image file', () => {
    // Arrange
    const req = {} as Express.Request;
    const file = {
      mimetype: 'image/jpeg',
      originalname: 'test.jpg',
      size: 1024,
    } as Express.Multer.File;
    const callback = jest.fn();

    // Act
    imageFileFilter(req, file, callback);

    // Assert
    expect(callback).toHaveBeenCalledWith(null, true);
  });

  // Null or undefined file is rejected with BadRequestException
  it('should reject null or undefined file with BadRequestException', () => {
    // Arrange
    const req = {} as Express.Request;
    const file = null as unknown as Express.Multer.File;
    const callback = jest.fn();

    // Act
    imageFileFilter(req, file, callback);

    // Assert
    expect(callback).toHaveBeenCalledWith(
      new BadRequestException('there is no file'),
      false,
    );
  });
});
